name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Determine And Set Version
        shell: pwsh
        run: |
          Write-Host "TagName: ${{ github.event.release.tag_name }}"
          $informationalVersion = ("${{ github.event.release.tag_name }}").Replace("v","")
          if ($informationalVersion -eq "") {
            $informationalVersion = $env:GITHUB_REF.replace('refs/tags/v', '')
          }
          if (($informationalVersion -eq "") -or ($informationalVersion -like "refs/*")) {
            $informationalVersion = "0.0.0"
          }
          echo "VERSION_INFORMATIONAL=$informationalVersion" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          $assemblyVersion = $informationalVersion.Split("-")[0];
          $assemblyVersion = $assemblyVersion + ".${{github.run_number}}"
          $informationalVersion = $informationalVersion + ".${{github.run_number}}"
          Write-Host "InformationalVersion: $informationalVersion"
          Write-Host "AssemblyVersion: $assemblyVersion"
          ((Get-Content -path "${{ github.workspace }}/src/services/Prism.Picshare.Functions/Prism.Picshare.Functions.csproj" -Raw) -replace '1.0.0-pre',$informationalVersion) | Set-Content -Path ${{ github.workspace }}/src/services/Prism.Picshare.Functions/Prism.Picshare.Functions.csproj
          ((Get-Content -path "${{ github.workspace }}/src/services/Prism.Picshare.Functions/Prism.Picshare.Functions.csproj" -Raw) -replace '1.0.0',$assemblyVersion) | Set-Content -Path ${{ github.workspace }}/src/services/Prism.Picshare.Functions/Prism.Picshare.Functions.csproj

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./src/services

      - name: Build
        run: dotnet build --configuration Release --output ./output
        working-directory: ./src/services

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: picshare-functions
          package: ./src/services/output
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
