name: CD - Nightly

on:
  push:
    branches:
      - main
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  api:
    uses: ./.github/workflows/cd-docker.yml
    with:
      dockerFile: ./services/Prism.Picshare.Services.Api/Dockerfile
      imageTag: service-api
      workingDirectory: src/net/
      isProduction: false
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          
  workers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Extract Version
        uses: damienaicheh/extract-version-from-tag-action@v1.0.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x

      - name: Build
        working-directory: src/net/
        run: |
          dotnet build services/Prism.Picshare.AzureServices.Workers/Prism.Picshare.AzureServices.Workers.csproj --configuration Release --output ./output

      - name: Publish
        uses: Azure/functions-action@v1
        with:
          app-name: picshare-dev-api
          package: src/net/output
          publish-profile: ${{ secrets.DEV_AZURE_FUNCTIONAPP_PUBLISH_PROFILE_WORKERS }}
  
  front:
    uses: ./.github/workflows/cd-docker.yml
    with:
      dockerFile: ./Dockerfile
      imageTag: client-front-public
      workingDirectory: src/clients/front/
      isProduction: false
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  reload-apps:
    runs-on: ubuntu-latest
    needs: [api, front]
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Azure CLI - Update App
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update -n ${{ secrets.DEV_AZURE_APP_API }} -g ${{ secrets.DEV_AZURE_RG }} --image docker.io/simonbaudart/picshare:service-api-nightly
            az containerapp update -n ${{ secrets.DEV_AZURE_APP_FRONT }} -g ${{ secrets.DEV_AZURE_RG }} --image docker.io/simonbaudart/picshare:client-front-public-nightly
